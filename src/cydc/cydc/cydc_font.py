#
# MIT License
#
# Copyright (c) 2023 Sergio Chico
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

import json

class CydcFont(object):
    default_font = [
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x20, 0x50, 0x30, 0x00, 0x70, 0x00, 0x00,
        0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        0x20, 0x00, 0x20, 0x40, 0x88, 0x88, 0x70, 0x00,
        0x00, 0x00, 0x28, 0x50, 0xa0, 0x50, 0x28, 0x00,
        0x00, 0x00, 0xa0, 0x50, 0x28, 0x50, 0xa0, 0x00,
        0x20, 0x40, 0x00, 0x68, 0x98, 0x98, 0x68, 0x00,
        0x10, 0x20, 0x70, 0x88, 0xf8, 0x80, 0x78, 0x00,
        0x10, 0x20, 0x00, 0x60, 0x20, 0x20, 0x70, 0x00,
        0x10, 0x20, 0x00, 0x70, 0x88, 0x88, 0x70, 0x00,
        0x10, 0x20, 0x00, 0x88, 0x88, 0x88, 0x70, 0x00,
        0x28, 0x50, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x00,
        0x28, 0x50, 0x88, 0xc8, 0xa8, 0x98, 0x88, 0x00,
        0x00, 0x70, 0x88, 0x80, 0x88, 0x70, 0x20, 0x40,
        0x70, 0x88, 0x80, 0x80, 0x88, 0x70, 0x20, 0x40,
        0x00, 0x50, 0x00, 0x88, 0x88, 0x88, 0x70, 0x00,
        0x50, 0x00, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x00,
        0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x50, 0xf8, 0x50, 0x50, 0x50, 0xf8, 0x50, 0x00,
        0x20, 0xf8, 0xa0, 0xf8, 0x28, 0xf8, 0x20, 0x00,
        0xc8, 0xc8, 0x10, 0x20, 0x40, 0x98, 0x98, 0x00,
        0x20, 0x50, 0x20, 0x60, 0x98, 0x90, 0x68, 0x00,
        0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00,
        0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x40, 0x00,
        0xa8, 0xa8, 0x70, 0xf8, 0x70, 0xa8, 0xa8, 0x00,
        0x00, 0x20, 0x20, 0xf8, 0x20, 0x20, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x20,
        0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00,
        0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x80, 0x00,
        0x70, 0x98, 0x98, 0xa8, 0xc8, 0xc8, 0x70, 0x00,
        0x20, 0x60, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00,
        0x70, 0x88, 0x08, 0x70, 0x80, 0x80, 0xf8, 0x00,
        0x70, 0x88, 0x08, 0x30, 0x08, 0x88, 0x70, 0x00,
        0x10, 0x30, 0x50, 0x90, 0xf8, 0x10, 0x10, 0x00,
        0xf8, 0x80, 0x80, 0xf0, 0x08, 0x88, 0x70, 0x00,
        0x70, 0x88, 0x80, 0xf0, 0x88, 0x88, 0x70, 0x00,
        0xf8, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x00,
        0x70, 0x88, 0x88, 0x70, 0x88, 0x88, 0x70, 0x00,
        0x70, 0x88, 0x88, 0x78, 0x08, 0x88, 0x70, 0x00,
        0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00,
        0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x20, 0x40,
        0x00, 0x08, 0x10, 0x20, 0x20, 0x10, 0x08, 0x00,
        0x00, 0x00, 0x00, 0x78, 0x00, 0x78, 0x00, 0x00,
        0x00, 0x40, 0x20, 0x10, 0x10, 0x20, 0x40, 0x00,
        0x70, 0x88, 0x88, 0x10, 0x20, 0x00, 0x20, 0x00,
        0x00, 0x70, 0x88, 0xa8, 0xb8, 0x80, 0x70, 0x00,
        0x70, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x00,
        0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0xf0, 0x00,
        0x70, 0x88, 0x80, 0x80, 0x80, 0x88, 0x70, 0x00,
        0xf0, 0x88, 0x88, 0x88, 0x88, 0x88, 0xf0, 0x00,
        0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0xf8, 0x00,
        0xf8, 0x80, 0x80, 0xf0, 0x80, 0x80, 0x80, 0x00,
        0x70, 0x88, 0x80, 0x80, 0x98, 0x88, 0x70, 0x00,
        0x88, 0x88, 0x88, 0xf8, 0x88, 0x88, 0x88, 0x00,
        0x70, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x00,
        0x08, 0x08, 0x08, 0x08, 0x08, 0x88, 0x70, 0x00,
        0x88, 0x90, 0xa0, 0xc0, 0xa0, 0x90, 0x88, 0x00,
        0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xf8, 0x00,
        0x88, 0xd8, 0xa8, 0x88, 0x88, 0x88, 0x88, 0x00,
        0x88, 0x88, 0xc8, 0xa8, 0x98, 0x88, 0x88, 0x00,
        0x70, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
        0xf0, 0x88, 0x88, 0xf0, 0x80, 0x80, 0x80, 0x00,
        0x70, 0x88, 0x88, 0x88, 0xa8, 0x98, 0x78, 0x00,
        0xf0, 0x88, 0x88, 0xf0, 0x90, 0x88, 0x88, 0x00,
        0x70, 0x88, 0x80, 0x70, 0x08, 0x88, 0x70, 0x00,
        0xf8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00,
        0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
        0x88, 0x88, 0x88, 0x88, 0x88, 0x50, 0x20, 0x00,
        0x88, 0x88, 0x88, 0x88, 0xa8, 0xa8, 0x50, 0x00,
        0x88, 0x88, 0x50, 0x20, 0x50, 0x88, 0x88, 0x00,
        0x88, 0x88, 0x50, 0x20, 0x20, 0x20, 0x20, 0x00,
        0xf8, 0x08, 0x10, 0x20, 0x40, 0x80, 0xf8, 0x00,
        0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x38, 0x00,
        0x80, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x00,
        0x70, 0x10, 0x10, 0x10, 0x10, 0x10, 0x70, 0x00,
        0x20, 0x70, 0xa8, 0x20, 0x20, 0x20, 0x20, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00,
        0x30, 0x48, 0x40, 0xf0, 0x40, 0x40, 0xf8, 0x00,
        0x00, 0x00, 0x68, 0x98, 0x88, 0x98, 0x68, 0x00,
        0x80, 0x80, 0xb0, 0xc8, 0x88, 0xc8, 0xb0, 0x00,
        0x00, 0x00, 0x70, 0x88, 0x80, 0x88, 0x70, 0x00,
        0x08, 0x08, 0x68, 0x98, 0x88, 0x98, 0x68, 0x00,
        0x00, 0x00, 0x70, 0x88, 0xf0, 0x80, 0x78, 0x00,
        0x30, 0x48, 0x40, 0x60, 0x40, 0x40, 0x40, 0x00,
        0x00, 0x00, 0x70, 0x88, 0x88, 0x78, 0x08, 0x70,
        0x80, 0x80, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00,
        0x20, 0x00, 0x60, 0x20, 0x20, 0x20, 0x70, 0x00,
        0x10, 0x00, 0x10, 0x10, 0x10, 0x90, 0x60, 0x00,
        0x80, 0x80, 0x80, 0xa0, 0xc0, 0xa0, 0x90, 0x00,
        0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x30, 0x00,
        0x00, 0x00, 0xd0, 0xa8, 0xa8, 0xa8, 0xa8, 0x00,
        0x00, 0x00, 0xb0, 0xc8, 0x88, 0x88, 0x88, 0x00,
        0x00, 0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00,
        0x00, 0x00, 0xb0, 0xc8, 0x88, 0xf0, 0x80, 0x80,
        0x00, 0x00, 0x68, 0x98, 0x88, 0x78, 0x08, 0x0c,
        0x00, 0x00, 0xb0, 0x40, 0x40, 0x40, 0x40, 0x00,
        0x00, 0x00, 0x70, 0x80, 0x70, 0x08, 0xf0, 0x00,
        0x00, 0x40, 0xe0, 0x40, 0x40, 0x40, 0x30, 0x00,
        0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00,
        0x00, 0x00, 0x88, 0x88, 0x50, 0x50, 0x20, 0x00,
        0x00, 0x00, 0x88, 0xa8, 0xa8, 0xa8, 0x50, 0x00,
        0x00, 0x00, 0x88, 0x50, 0x20, 0x50, 0x88, 0x00,
        0x00, 0x00, 0x88, 0x88, 0x98, 0x68, 0x08, 0x70,
        0x00, 0x00, 0xf8, 0x10, 0x20, 0x40, 0xf8, 0x00,
        0x18, 0x20, 0x20, 0x40, 0x20, 0x20, 0x18, 0x00,
        0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00,
        0x60, 0x10, 0x10, 0x08, 0x10, 0x10, 0x60, 0x00,
        0x00, 0x28, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
#-- extended chars
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  # Option no selected    
        # Animation Cycle for selected option
        0x10, 0x18, 0x1C, 0xFE, 0xFE, 0x1C, 0x18, 0x10,
        0x00, 0x10, 0x18, 0xFE, 0xFE, 0x18, 0x10, 0x00,
        0x00, 0x10, 0x18, 0xFE, 0xFE, 0x18, 0x10, 0x00,
        0x00, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x18, 0xFE, 0xFE, 0x18, 0x00, 0x00,
        0x00, 0x10, 0x18, 0xFE, 0xFE, 0x18, 0x10, 0x00,
        0x00, 0x10, 0x18, 0xFE, 0xFE, 0x18, 0x10, 0x00,
        0x10, 0x18, 0x1C, 0xFE, 0xFE, 0x1C, 0x18, 0x10,
        # Animation Cycle for wait
        0x18, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18,
        0x00, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00,
        0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00,
        0x00, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00,
        0x18, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18,
        0x18, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18,
    ]

    default_font_sizes = [6 for x in range(127)] + [8 for x in range(17)]

    def __init__(self, font_chars=None, font_sizes=None):
        if font_chars is None:
            self.font_chars = self.default_font
        else:
            self.font_chars = font_chars
        if font_sizes is None:
            self.font_sizes = self.default_font_sizes
        else:
            self.font_sizes = font_sizes

    def getJson(self):
        charset = []
        for i in range(0, len(self.font_chars), 8):
            char = {"Id":int(i/8), "Character": self.font_chars[i:i+8], "Width":self.font_sizes[int(i/8)]}
            charset.append(char)
        return json.dumps(charset)

    def loadCharset(self, charset):
        chars = []
        sizes = []
        if charset is not None:
            charset = sorted(charset, key=lambda character: character["Id"])
            for ch in charset:
                chars = chars + ch["Character"]
                sizes.append(ch["Width"])
            if (len(chars) < len(self.font_chars)):
                chars = chars + self.font_chars[len(chars):]
            if (len(sizes) < len(self.font_sizes)):
                sizes = sizes + self.font_sizes[len(sizes):]
            self.font_chars = chars
            self.font_sizes = sizes
